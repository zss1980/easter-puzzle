# Backend service configuration
BACKEND_PORT_HOST=3001
BACKEND_PORT_CONTAINER=3001 # Port the backend listens on inside its container

# Frontend service configuration
FRONTEND_PORT_HOST=3000
FRONTEND_PORT_CONTAINER=80 # Nginx port inside the frontend container

# MongoDB service configuration
MONGO_PORT_HOST=27017 # Host port to access MongoDB (optional, for external tools)
MONGO_INITDB_ROOT_USERNAME=admin
MONGO_INITDB_ROOT_PASSWORD=password # CHANGE THIS IN YOUR ACTUAL .env FILE
MONGO_INITDB_DATABASE=egghunt_db # Database name to be created by mongo init script

# Application secrets and configurations (used by backend)
JWT_SECRET=your_very_strong_and_secret_key_at_least_32_characters_long # CHANGE THIS!
JWT_EXPIRES_IN=1d # Optional: JWT token expiration time (e.g., 1d, 1h, 30m)

# Node environment (can be 'development' or 'production')
# For production, ensure Dockerfiles build production artifacts and don't mount source code.
NODE_ENV=development

# MONGODB_URI is constructed in docker-compose.yml using MONGO_INITDB_DATABASE etc.
# Example if you were to set it directly (not needed with current docker-compose):
# MONGODB_URI=mongodb://admin:password@localhost:27017/egghunt_db?authSource=admin
